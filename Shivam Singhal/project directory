Login Page
The login page allows a user to gain access to an application by entering their username and password or by authenticating using a social media login.

Usage scenarios related to the login page include:

A user navigates to an application and is presented with a login page as a way to gain access to the application. There are two possible results:
Authentication is successful and the user is directed to the application landing page.
Authentication fails and the user remains on the login page. If authentication fails, the screen should show an informational or error message about the failure.
A user is automatically logged out due to inactivity. In this event, they will be returned to the login page, which will display an informational message explaining what happened. Once the user logs in again, they should be taken back to the page they were previously on before being timed out. Thirty minutes is the suggested duration before a session timeout, but this is subject to change based on your product’s security requirements.

To Beautify the login form, animations are used with the help of CSS
Animation is a method in which pictures are manipulated to appear as moving images.
CSS animations make it possible to animate transitions from one CSS style configuration to another. Animations consist of two components, a style describing the CSS animation and a set of keyframes that indicate the start and end states of the animation’s style, as well as possible intermediate waypoints.

There are three key advantages to CSS animations over traditional script-driven animation techniques:

They’re easy to use for simple animations; you can create them without even having to know JavaScript.
The animations run well, even under moderate system load. Simple animations can often perform poorly in JavaScript (unless they’re well made). The rendering engine can use frame-skipping and other techniques to keep the performance as smooth as possible.
Letting the browser control the animation sequence lets the browser optimize performance and efficiency by, for example, reducing the update frequency of animations running in tabs that aren't currently visible.
